


import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Generate some sample data
np.random.seed(0)
num_samples = 1000
square_footage = np.random.randint(1000, 5000, size=num_samples)
num_bedrooms = np.random.randint(1, 6, size=num_samples)
num_bathrooms = np.random.randint(1, 4, size=num_samples)
prices = 100 * square_footage + 5000 * num_bedrooms + 7000 * num_bathrooms + np.random.randn(num_samples) * 10000

# Combine features into a feature matrix
X = np.column_stack((square_footage, num_bedrooms, num_bathrooms))

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, prices, test_size=0.2, random_state=42)

# Train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred_train = model.predict(X_train)
y_pred_test = model.predict(X_test)

# Evaluate the model
mse_train = mean_squared_error(y_train, y_pred_train)
mse_test = mean_squared_error(y_test, y_pred_test)

print("Training MSE:", mse_train)
print("Testing MSE:", mse_test)
